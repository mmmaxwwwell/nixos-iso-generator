#!/bin/bash
output_filename=nixos.iso

if [ "$(ls -1 ssh-keys/*.pub | wc -l)" -gt "0" ]; then
  echo "Generating ISO, this may take a while."
else
  echo "No keys found. You must have at least 1 file in the ssh-keys folder with a .pub extension, exiting."
  exit
fi

keys_text=$(cat ssh-keys/*.pub | xargs -I {} echo "\"{}\" ")
keys_text=$(echo $keys_text | tr '"' '\"')
sed_command="sed \"s#CUSTOM_SSH_KEYS#${keys_text//\//\\\/}#g\""
cat configuration.nix.template | sed "s#CUSTOM_SSH_KEYS#${keys_text//\//\\\/}#g" > configuration.nix
file_path=$(nix-shell -p nixos-generators --command 'nixos-generate -f iso -c ./configuration.nix -I nixpkgs=channel:nixos-21.11' | tail -n 1)

read -r -p "Do you want to copy your new iso to $(keybase whoami)'s public keybase folder?[y/N] " response
response=${response,,}
if [[ "$response" =~ ^(yes|y)$ ]]; then
  echo "Copying to public keybase folder..."
  run_keybase -g &> /dev/null
  rm -rf /keybase/public/$(keybase whoami)/$output_filename
  install -C -m 755 -o $USER -g $USER $file_path /keybase/public/$(keybase whoami)/$output_filename
  echo "ISO is available at https://$(keybase whoami).keybase.pub/$output_filename"
  cat ssh-keys/*.pub > /keybase/public/$(keybase whoami)/nixos_authorized_keys
  echo "Public key is available at https://$(keybase whoami).keybase.pub/nixos_authorized_keys"
else 
  echo "User declined file copy operation. Exiting."
  exit
fi


